# yaml-language-server: $schema=https://aka.ms/configuration-dsc-schema/0.2
properties:
  ########################################
  ### ASSERTIONS: System Requirements
  ########################################
  assertions:
    ### Assertion: OS Version
    ### -------------------------------------
    - resource: Microsoft.Windows.Developer/OsVersion
      directives:
        description: Verify min OS version requirement
        allowPrerelease: true
      settings:
        MinVersion: "10.0.22000"
  ########################################
  ### RESOURCES: System Configuration
  ########################################
  resources:
    ########################################
    ### Initialization
    ########################################
    ### Format a new Dev Drive
    ### -------------------------------------
    # See https://github.com/dsccommunity/StorageDsc/wiki/Disk for details about the parameters for the Disk resource.
    # Note: the AllowDestructive flag is used to signal to the disk dsc resource that if
    # it needs to resize an existing partition, it can do so. The disk resource also takes a flag called 'ClearDisk', Its important that
    # you do not combine the usage of 'AllowDestructive' and 'ClearDisk' as this will clear the entire disk including pre-existing volumes.

    # - resource: Disk
    #   id: devdrive
    #   directives:
    #     description: "Format a new Dev Drive volume onto Disk 0"
    #     module: StorageDsc
    #     allowPrerelease: true
    #   settings:
    #     DiskId: "0"
    #     DiskIdType: "Number"
    #     DriveLetter: "D"
    #     FSLabel: "Dev"
    #     DevDrive: true
    #     AllowDestructive: true
    #     FSFormat: "ReFS"
    #     Size: "50Gb"


    # - resource: Microsoft.WinGet.DSC/WinGetPackage
    #   directives:
    #     description: Install latest Windows Terminal
    #     allowPrerelease: true
    #   settings:
    #     id: Microsoft.WindowsTerminal
    #     source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: PowerShell
      directives:
        description: Install latest PowerShell
        allowPrerelease: true
      settings:
        id: Microsoft.PowerShell
        source: winget


    ########################################
    ### Install CLIs, SDKs & Tools
    ########################################
    ### Terminal Settings
    ### -------------------------------------
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Git
      directives:
        description: Install Git
        allowPrerelease: true
      settings:
        id: Git.Git
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Yarn
      directives:
        description: Install Yarn
        allowPrerelease: true
      settings:
        id: Yarn.Yarn
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Python
      directives:
        description: Install Python 3.12
        allowPrerelease: true
      settings:
        id: Python.Python.3.12
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Node
      directives:
        description: Install Node.js LTS
        allowPrerelease: true
      settings:
        id: OpenJS.NodeJS.LTS
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Docker Desktop
      directives:
        description: Install Docker Desktop
        allowPrerelease: true
      settings:
        id: Docker.DockerDesktop
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: GitLFS
      directives:
        description: Install Git LFS
        allowPrerelease: true
      settings:
        id: GitHub.GitLFS
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: AWS CLI
      directives:
        description: Install AWS CLI
        allowPrerelease: true
      settings:
        id: Amazon.AWSCLI
        source: winget
    # Install Development Applications
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: PowerShell 7
      directives:
        description: Install PowerShell 7
        allowPrerelease: true
      settings:
        id: Microsoft.PowerShell
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: VSCode
      directives:
        description: Install Visual Studio Code
        allowPrerelease: true
      settings:
        id: Microsoft.VisualStudioCode
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: cursor
      directives:
        description: Install Cursor
        allowPrerelease: true
      settings:
        id: Anysphere.Cursor
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Hoppscotch
      directives:
        description: Install Hoppscotch
        allowPrerelease: true
      settings:
        id: hoppscotch.Hoppscotch
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: windowsTerminal
      directives:
        description: Install Windows Terminal
        allowPrerelease: true
      settings:
        id: Microsoft.WindowsTerminal
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: OMP
      directives:
        description: Install Oh My Posh
        allowPrerelease: true
      settings:
        id: JanDeDobbeleer.OhMyPosh
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: screenToGif
      directives:
        description: Install ScreenToGif
        allowPrerelease: true
      settings:
        id: NickeManarin.ScreenToGif
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Everything
      directives:
        description: Install Everything
        allowPrerelease: true
      settings:
        id: voidtools.Everything
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Kleopatra
      directives:
        description: Install Kleopatra
        allowPrerelease: true
      settings:
        id: GnuPG.Gpg4win
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: GNUPG
      directives:
        description: Install GNUPG
        allowPrerelease: true
      settings:
        id: GnuPG.GnuPG
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Github CLI
      directives:
        description: Install Github CLI
        allowPrerelease: true
      settings:
        id: GitHub.cli
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Chrome
      directives:
        description: Install Chrome
        allowPrerelease: true
      settings:
        id: Google.Chrome
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Firefox
      directives:
        description: Install Firefox
        allowPrerelease: true
      settings:
        id: Mozilla.Firefox
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: zoomit
      directives:
        description: Install Zoomit
        allowPrerelease: true
      settings:
        id: Microsoft.Sysinternals.ZoomIt
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: sharex
      directives:
        description: Install ShareX
        allowPrerelease: true
      settings:
        id: ShareX.ShareX
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: powertoys
      directives:
        description: Install PowerToys
        allowPrerelease: true
      settings:
        id: Microsoft.PowerToys
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: FiddlerClassic
      directives:
        description: Install Telerik Fiddler Classic
        allowPrerelease: true
      settings:
        id: Telerik.Fiddler.Classic
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: HxD
      directives:
        description: Install HxD
        allowPrerelease: true
      settings:
        id: MHNexus.HxD
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Zeal
      directives:
        description: Install Zeal
        allowPrerelease: true
      settings:
        id: OlegShparber.Zeal
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: QMK Toolbox
      directives:
        description: Install QMK Toolbox
        allowPrerelease: true
      settings:
        id: QMK.QMKToolbox
        source: winget
    - resource: PSDscResources/Script
      id: VisualStudioCode Extensions
      directives:
        description: Script to install Visual Studio Code extensions
        allowPrerelease: true
      settings:
        GetScript: |
          # Not using this at the moment.
        TestScript: |
          # Ignore deprecation warnings & reload path
          $env:NODE_OPTIONS="--no-deprecation"
          $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User")

          # Load required extensions from JSON file
          $jsonContent = Get-Content '${WinGetConfigRoot}\configuration-vscode-extensions.json' -Raw
          $extensions = (ConvertFrom-Json $jsonContent).extensions

          # Get the list of currently installed extensions
          $installedExtensions = code --list-extensions

          # Check if all required extensions are installed
          $allInstalled = $extensions.name | ForEach-Object { $_ -in $installedExtensions }

          return $allInstalled -contains $false -eq $false
        SetScript: |
          # Ignore deprecation warnings & reload path
          $env:NODE_OPTIONS="--no-deprecation"
          $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User")

          # Load required extensions from JSON file
          $jsonContent = Get-Content '${WinGetConfigRoot}\configuration-vscode-extensions.json' -Raw
          $extensions = (ConvertFrom-Json $jsonContent).extensions

          # Get the list of currently installed extensions
          $installedExtensions = code --list-extensions

          # Install each extension if not already installed
          foreach ($extension in $extensions) {
            if ($installedExtensions -notcontains $extension.name) {
              code --install-extension $extension.name
            }
          }
      dependsOn:
        - VSCode
    - resource: PSDscResources/Script
      id: Cursor Extensions
      directives:
        description: Script to install Cursor extensions
        allowPrerelease: true
      settings:
        GetScript: |
          # Not using this at the moment.
        TestScript: |
          # Load required extensions from JSON file
          $jsonContent = Get-Content '${WinGetConfigRoot}\configuration-vscode-extensions.json' -Raw
          $extensions = (ConvertFrom-Json $jsonContent).extensions

          # Get the list of currently installed extensions
          $installedExtensions = cursor --list-extensions

          # Check if all required extensions are installed
          $allInstalled = $extensions.name | ForEach-Object { $_ -in $installedExtensions }

          return $allInstalled -contains $false -eq $false
        SetScript: |
          # Ignore deprecation warnings & reload path
          $env:NODE_OPTIONS="--no-deprecation"
          $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User")

          # Load required extensions from JSON file
          $jsonContent = Get-Content '${WinGetConfigRoot}\configuration-vscode-extensions.json' -Raw
          $extensions = (ConvertFrom-Json $jsonContent).extensions

          # Get the list of currently installed extensions
          $installedExtensions = cursor --list-extensions

          # Install each extension if not already installed
          foreach ($extension in $extensions) {
            if ($installedExtensions -notcontains $extension.name) {
              cursor --install-extension $extension.name
            }
          }
      dependsOn:
        - Cursor
  configurationVersion: 0.2.0